using Microsoft.Xrm.Sdk;
using Microsoft.Xrm.Sdk.Query;
using System;
using System.IdentityModel.Metadata;
using System.ServiceModel;

 

namespace PlgCreateRecord
{
    public class updatefromitems : IPlugin
    {
        public void Execute(IServiceProvider serviceProvider)
        {
            // Obtain the tracing service
            ITracingService tracingService =
            (ITracingService)serviceProvider.GetService(typeof(ITracingService));

 

            // Obtain the execution context from the service provider.  
            IPluginExecutionContext context = (IPluginExecutionContext)
                serviceProvider.GetService(typeof(IPluginExecutionContext));

 

            // The InputParameters collection contains all the data passed in the message request.  
            if (context.InputParameters.Contains("Target") &&
                context.InputParameters["Target"] is Entity)
            {
                // Obtain the target entity from the input parameters.  
                        Entity entity = (Entity)context.InputParameters["Target"];

 

                // Obtain the organization service reference which you will need for  
                // web service calls.  
                IOrganizationServiceFactory serviceFactory =
                    (IOrganizationServiceFactory)serviceProvider.GetService(typeof(IOrganizationServiceFactory));
                IOrganizationService service = serviceFactory.CreateOrganizationService(context.UserId);

 

                try
                {

 


                        Guid taskitemsid = entity.Id;

                        ColumnSet LookupTask = new ColumnSet(new String[] { "ak_tasks" });

 

                        Entity Myentityhavinglookup = service.Retrieve("ak_ak_tasksitems",taskitemsid,LookupTask);

 

                        var taskid = ((EntityReference)Myentityhavinglookup["ak_tasks"]).Id;

 

                        //Guid tasksid = ((EntityReference)entity["ak_tasks"]).Id;

 

                        OptionSetValue topic = (OptionSetValue)entity["ak_status"];
                        int selectedTopicValue = topic.Value;

                        Entity tasksenti = new Entity("ak_ak_tasks", taskid);


                        Entity myEntity = service.Retrieve("ak_ak_tasks", taskid, new ColumnSet(true));


                }

 

                catch (FaultException<OrganizationServiceFault> ex)
                {
                    throw new InvalidPluginExecutionException("An error occurred in FollowUpPlugin.", ex);
                }

 

                catch (Exception ex)
                {
                    tracingService.Trace("FollowUpPlugin: {0}", ex.ToString());
                    throw;
                }
            }
        }
    }
}
